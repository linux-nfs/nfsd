/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Display helpers for NFS protocol elements
 *
 * Author: Chuck Lever <chuck.lever@oracle.com>
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.
 */

#include <linux/nfs.h>
#include <linux/nfs4.h>
#include <uapi/linux/nfs.h>
#include <uapi/linux/nfs3.h>
#include <uapi/linux/nfsacl.h>

TRACE_DEFINE_ENUM(NFS_OK);
TRACE_DEFINE_ENUM(NFSERR_PERM);
TRACE_DEFINE_ENUM(NFSERR_NOENT);
TRACE_DEFINE_ENUM(NFSERR_IO);
TRACE_DEFINE_ENUM(NFSERR_NXIO);
TRACE_DEFINE_ENUM(NFSERR_EAGAIN);
TRACE_DEFINE_ENUM(NFSERR_ACCES);
TRACE_DEFINE_ENUM(NFSERR_EXIST);
TRACE_DEFINE_ENUM(NFSERR_XDEV);
TRACE_DEFINE_ENUM(NFSERR_NODEV);
TRACE_DEFINE_ENUM(NFSERR_NOTDIR);
TRACE_DEFINE_ENUM(NFSERR_ISDIR);
TRACE_DEFINE_ENUM(NFSERR_INVAL);
TRACE_DEFINE_ENUM(NFSERR_FBIG);
TRACE_DEFINE_ENUM(NFSERR_NOSPC);
TRACE_DEFINE_ENUM(NFSERR_ROFS);
TRACE_DEFINE_ENUM(NFSERR_MLINK);
TRACE_DEFINE_ENUM(NFSERR_OPNOTSUPP);
TRACE_DEFINE_ENUM(NFSERR_NAMETOOLONG);
TRACE_DEFINE_ENUM(NFSERR_NOTEMPTY);
TRACE_DEFINE_ENUM(NFSERR_DQUOT);
TRACE_DEFINE_ENUM(NFSERR_STALE);
TRACE_DEFINE_ENUM(NFSERR_REMOTE);
TRACE_DEFINE_ENUM(NFSERR_WFLUSH);
TRACE_DEFINE_ENUM(NFSERR_BADHANDLE);
TRACE_DEFINE_ENUM(NFSERR_NOT_SYNC);
TRACE_DEFINE_ENUM(NFSERR_BAD_COOKIE);
TRACE_DEFINE_ENUM(NFSERR_NOTSUPP);
TRACE_DEFINE_ENUM(NFSERR_TOOSMALL);
TRACE_DEFINE_ENUM(NFSERR_SERVERFAULT);
TRACE_DEFINE_ENUM(NFSERR_BADTYPE);
TRACE_DEFINE_ENUM(NFSERR_JUKEBOX);

#define show_nfs_status(x) \
	__print_symbolic(x, \
		{ NFS_OK,			"OK" }, \
		{ NFSERR_PERM,			"PERM" }, \
		{ NFSERR_NOENT,			"NOENT" }, \
		{ NFSERR_IO,			"IO" }, \
		{ NFSERR_NXIO,			"NXIO" }, \
		{ ECHILD,			"CHILD" }, \
		{ NFSERR_EAGAIN,		"AGAIN" }, \
		{ NFSERR_ACCES,			"ACCES" }, \
		{ NFSERR_EXIST,			"EXIST" }, \
		{ NFSERR_XDEV,			"XDEV" }, \
		{ NFSERR_NODEV,			"NODEV" }, \
		{ NFSERR_NOTDIR,		"NOTDIR" }, \
		{ NFSERR_ISDIR,			"ISDIR" }, \
		{ NFSERR_INVAL,			"INVAL" }, \
		{ NFSERR_FBIG,			"FBIG" }, \
		{ NFSERR_NOSPC,			"NOSPC" }, \
		{ NFSERR_ROFS,			"ROFS" }, \
		{ NFSERR_MLINK,			"MLINK" }, \
		{ NFSERR_OPNOTSUPP,		"OPNOTSUPP" }, \
		{ NFSERR_NAMETOOLONG,		"NAMETOOLONG" }, \
		{ NFSERR_NOTEMPTY,		"NOTEMPTY" }, \
		{ NFSERR_DQUOT,			"DQUOT" }, \
		{ NFSERR_STALE,			"STALE" }, \
		{ NFSERR_REMOTE,		"REMOTE" }, \
		{ NFSERR_WFLUSH,		"WFLUSH" }, \
		{ NFSERR_BADHANDLE,		"BADHANDLE" }, \
		{ NFSERR_NOT_SYNC,		"NOTSYNC" }, \
		{ NFSERR_BAD_COOKIE,		"BADCOOKIE" }, \
		{ NFSERR_NOTSUPP,		"NOTSUPP" }, \
		{ NFSERR_TOOSMALL,		"TOOSMALL" }, \
		{ NFSERR_SERVERFAULT,		"REMOTEIO" }, \
		{ NFSERR_BADTYPE,		"BADTYPE" }, \
		{ NFSERR_JUKEBOX,		"JUKEBOX" })

TRACE_DEFINE_ENUM(NFS_UNSTABLE);
TRACE_DEFINE_ENUM(NFS_DATA_SYNC);
TRACE_DEFINE_ENUM(NFS_FILE_SYNC);

#define show_nfs_stable_how(x) \
	__print_symbolic(x, \
		{ NFS_UNSTABLE,			"UNSTABLE" }, \
		{ NFS_DATA_SYNC,		"DATA_SYNC" }, \
		{ NFS_FILE_SYNC,		"FILE_SYNC" })

#define show_nfs3_access_flags(x) \
	__print_flags(x, "|", \
		{ NFS3_ACCESS_READ,		"READ" }, \
		{ NFS3_ACCESS_LOOKUP,		"LOOKUP" }, \
		{ NFS3_ACCESS_MODIFY,		"MODIFY" }, \
		{ NFS3_ACCESS_EXTEND,		"EXTEND" }, \
		{ NFS3_ACCESS_DELETE,		"DELETE" }, \
		{ NFS3_ACCESS_EXECUTE,		"EXECUTE" })

#define show_nfs3_acl_mask(x) \
	__print_flags(x, "|", \
		{ NFS_ACL,			"ACL" }, \
		{ NFS_ACLCNT,			"ACLCNT" }, \
		{ NFS_DFACL,			"DFACL" }, \
		{ NFS_DFACLCNT,			"DFACLCNT" }, \
		{ NFS_ACL_DEFAULT,		"ACL_DEFAULT" })

#define show_nfs3_fsf_properties(x) \
	__print_flags(x, "|", \
		{ NFS3_FSF_LINK,		"LINK" }, \
		{ NFS3_FSF_SYMLINK,		"SYMLINK" }, \
		{ NFS3_FSF_HOMOGENEOUS,		"HOMOGENOUS" }, \
		{ NFS3_FSF_CANSETTIME,		"CANSETTIME" })

TRACE_DEFINE_ENUM(NFS4_OK);
TRACE_DEFINE_ENUM(NFS4ERR_ACCESS);
TRACE_DEFINE_ENUM(NFS4ERR_ATTRNOTSUPP);
TRACE_DEFINE_ENUM(NFS4ERR_ADMIN_REVOKED);
TRACE_DEFINE_ENUM(NFS4ERR_BACK_CHAN_BUSY);
TRACE_DEFINE_ENUM(NFS4ERR_BADCHAR);
TRACE_DEFINE_ENUM(NFS4ERR_BADHANDLE);
TRACE_DEFINE_ENUM(NFS4ERR_BADIOMODE);
TRACE_DEFINE_ENUM(NFS4ERR_BADLAYOUT);
TRACE_DEFINE_ENUM(NFS4ERR_BADLABEL);
TRACE_DEFINE_ENUM(NFS4ERR_BADNAME);
TRACE_DEFINE_ENUM(NFS4ERR_BADOWNER);
TRACE_DEFINE_ENUM(NFS4ERR_BADSESSION);
TRACE_DEFINE_ENUM(NFS4ERR_BADSLOT);
TRACE_DEFINE_ENUM(NFS4ERR_BADTYPE);
TRACE_DEFINE_ENUM(NFS4ERR_BADXDR);
TRACE_DEFINE_ENUM(NFS4ERR_BAD_COOKIE);
TRACE_DEFINE_ENUM(NFS4ERR_BAD_HIGH_SLOT);
TRACE_DEFINE_ENUM(NFS4ERR_BAD_RANGE);
TRACE_DEFINE_ENUM(NFS4ERR_BAD_SEQID);
TRACE_DEFINE_ENUM(NFS4ERR_BAD_SESSION_DIGEST);
TRACE_DEFINE_ENUM(NFS4ERR_BAD_STATEID);
TRACE_DEFINE_ENUM(NFS4ERR_CB_PATH_DOWN);
TRACE_DEFINE_ENUM(NFS4ERR_CLID_INUSE);
TRACE_DEFINE_ENUM(NFS4ERR_CLIENTID_BUSY);
TRACE_DEFINE_ENUM(NFS4ERR_COMPLETE_ALREADY);
TRACE_DEFINE_ENUM(NFS4ERR_CONN_NOT_BOUND_TO_SESSION);
TRACE_DEFINE_ENUM(NFS4ERR_DEADLOCK);
TRACE_DEFINE_ENUM(NFS4ERR_DEADSESSION);
TRACE_DEFINE_ENUM(NFS4ERR_DELAY);
TRACE_DEFINE_ENUM(NFS4ERR_DELEG_ALREADY_WANTED);
TRACE_DEFINE_ENUM(NFS4ERR_DELEG_REVOKED);
TRACE_DEFINE_ENUM(NFS4ERR_DENIED);
TRACE_DEFINE_ENUM(NFS4ERR_DIRDELEG_UNAVAIL);
TRACE_DEFINE_ENUM(NFS4ERR_DQUOT);
TRACE_DEFINE_ENUM(NFS4ERR_ENCR_ALG_UNSUPP);
TRACE_DEFINE_ENUM(NFS4ERR_EXIST);
TRACE_DEFINE_ENUM(NFS4ERR_EXPIRED);
TRACE_DEFINE_ENUM(NFS4ERR_FBIG);
TRACE_DEFINE_ENUM(NFS4ERR_FHEXPIRED);
TRACE_DEFINE_ENUM(NFS4ERR_FILE_OPEN);
TRACE_DEFINE_ENUM(NFS4ERR_GRACE);
TRACE_DEFINE_ENUM(NFS4ERR_HASH_ALG_UNSUPP);
TRACE_DEFINE_ENUM(NFS4ERR_INVAL);
TRACE_DEFINE_ENUM(NFS4ERR_IO);
TRACE_DEFINE_ENUM(NFS4ERR_ISDIR);
TRACE_DEFINE_ENUM(NFS4ERR_LAYOUTTRYLATER);
TRACE_DEFINE_ENUM(NFS4ERR_LAYOUTUNAVAILABLE);
TRACE_DEFINE_ENUM(NFS4ERR_LEASE_MOVED);
TRACE_DEFINE_ENUM(NFS4ERR_LOCKED);
TRACE_DEFINE_ENUM(NFS4ERR_LOCKS_HELD);
TRACE_DEFINE_ENUM(NFS4ERR_LOCK_RANGE);
TRACE_DEFINE_ENUM(NFS4ERR_MINOR_VERS_MISMATCH);
TRACE_DEFINE_ENUM(NFS4ERR_MLINK);
TRACE_DEFINE_ENUM(NFS4ERR_MOVED);
TRACE_DEFINE_ENUM(NFS4ERR_NAMETOOLONG);
TRACE_DEFINE_ENUM(NFS4ERR_NOENT);
TRACE_DEFINE_ENUM(NFS4ERR_NOFILEHANDLE);
TRACE_DEFINE_ENUM(NFS4ERR_NOMATCHING_LAYOUT);
TRACE_DEFINE_ENUM(NFS4ERR_NOSPC);
TRACE_DEFINE_ENUM(NFS4ERR_NOTDIR);
TRACE_DEFINE_ENUM(NFS4ERR_NOTEMPTY);
TRACE_DEFINE_ENUM(NFS4ERR_NOTSUPP);
TRACE_DEFINE_ENUM(NFS4ERR_NOT_ONLY_OP);
TRACE_DEFINE_ENUM(NFS4ERR_NOT_SAME);
TRACE_DEFINE_ENUM(NFS4ERR_NO_GRACE);
TRACE_DEFINE_ENUM(NFS4ERR_NXIO);
TRACE_DEFINE_ENUM(NFS4ERR_OLD_STATEID);
TRACE_DEFINE_ENUM(NFS4ERR_OPENMODE);
TRACE_DEFINE_ENUM(NFS4ERR_OP_ILLEGAL);
TRACE_DEFINE_ENUM(NFS4ERR_OP_NOT_IN_SESSION);
TRACE_DEFINE_ENUM(NFS4ERR_PERM);
TRACE_DEFINE_ENUM(NFS4ERR_PNFS_IO_HOLE);
TRACE_DEFINE_ENUM(NFS4ERR_PNFS_NO_LAYOUT);
TRACE_DEFINE_ENUM(NFS4ERR_RECALLCONFLICT);
TRACE_DEFINE_ENUM(NFS4ERR_RECLAIM_BAD);
TRACE_DEFINE_ENUM(NFS4ERR_RECLAIM_CONFLICT);
TRACE_DEFINE_ENUM(NFS4ERR_REJECT_DELEG);
TRACE_DEFINE_ENUM(NFS4ERR_REP_TOO_BIG);
TRACE_DEFINE_ENUM(NFS4ERR_REP_TOO_BIG_TO_CACHE);
TRACE_DEFINE_ENUM(NFS4ERR_REQ_TOO_BIG);
TRACE_DEFINE_ENUM(NFS4ERR_RESOURCE);
TRACE_DEFINE_ENUM(NFS4ERR_RESTOREFH);
TRACE_DEFINE_ENUM(NFS4ERR_RETRY_UNCACHED_REP);
TRACE_DEFINE_ENUM(NFS4ERR_RETURNCONFLICT);
TRACE_DEFINE_ENUM(NFS4ERR_ROFS);
TRACE_DEFINE_ENUM(NFS4ERR_SAME);
TRACE_DEFINE_ENUM(NFS4ERR_SHARE_DENIED);
TRACE_DEFINE_ENUM(NFS4ERR_SEQUENCE_POS);
TRACE_DEFINE_ENUM(NFS4ERR_SEQ_FALSE_RETRY);
TRACE_DEFINE_ENUM(NFS4ERR_SEQ_MISORDERED);
TRACE_DEFINE_ENUM(NFS4ERR_SERVERFAULT);
TRACE_DEFINE_ENUM(NFS4ERR_STALE);
TRACE_DEFINE_ENUM(NFS4ERR_STALE_CLIENTID);
TRACE_DEFINE_ENUM(NFS4ERR_STALE_STATEID);
TRACE_DEFINE_ENUM(NFS4ERR_SYMLINK);
TRACE_DEFINE_ENUM(NFS4ERR_TOOSMALL);
TRACE_DEFINE_ENUM(NFS4ERR_TOO_MANY_OPS);
TRACE_DEFINE_ENUM(NFS4ERR_UNKNOWN_LAYOUTTYPE);
TRACE_DEFINE_ENUM(NFS4ERR_UNSAFE_COMPOUND);
TRACE_DEFINE_ENUM(NFS4ERR_WRONGSEC);
TRACE_DEFINE_ENUM(NFS4ERR_WRONG_CRED);
TRACE_DEFINE_ENUM(NFS4ERR_WRONG_TYPE);
TRACE_DEFINE_ENUM(NFS4ERR_XDEV);

TRACE_DEFINE_ENUM(NFS4ERR_RESET_TO_MDS);
TRACE_DEFINE_ENUM(NFS4ERR_RESET_TO_PNFS);

#define show_nfs4_status(x) \
	__print_symbolic(x, \
		{ NFS4_OK,			"OK" }, \
		{ EPERM,			"EPERM" }, \
		{ ENOENT,			"ENOENT" }, \
		{ EIO,				"EIO" }, \
		{ ENXIO,			"ENXIO" }, \
		{ EACCES,			"EACCES" }, \
		{ EEXIST,			"EEXIST" }, \
		{ EXDEV,			"EXDEV" }, \
		{ ENOTDIR,			"ENOTDIR" }, \
		{ EISDIR,			"EISDIR" }, \
		{ EFBIG,			"EFBIG" }, \
		{ ENOSPC,			"ENOSPC" }, \
		{ EROFS,			"EROFS" }, \
		{ EMLINK,			"EMLINK" }, \
		{ ENAMETOOLONG,			"ENAMETOOLONG" }, \
		{ ENOTEMPTY,			"ENOTEMPTY" }, \
		{ EDQUOT,			"EDQUOT" }, \
		{ ESTALE,			"ESTALE" }, \
		{ EBADHANDLE,			"EBADHANDLE" }, \
		{ EBADCOOKIE,			"EBADCOOKIE" }, \
		{ ENOTSUPP,			"ENOTSUPP" }, \
		{ ETOOSMALL,			"ETOOSMALL" }, \
		{ EREMOTEIO,			"EREMOTEIO" }, \
		{ EBADTYPE,			"EBADTYPE" }, \
		{ EAGAIN,			"EAGAIN" }, \
		{ ELOOP,			"ELOOP" }, \
		{ EOPNOTSUPP,			"EOPNOTSUPP" }, \
		{ EDEADLK,			"EDEADLK" }, \
		{ ENOMEM,			"ENOMEM" }, \
		{ EKEYEXPIRED,			"EKEYEXPIRED" }, \
		{ ETIMEDOUT,			"ETIMEDOUT" }, \
		{ ERESTARTSYS,			"ERESTARTSYS" }, \
		{ ECONNREFUSED,			"ECONNREFUSED" }, \
		{ ECONNRESET,			"ECONNRESET" }, \
		{ ENETUNREACH,			"ENETUNREACH" }, \
		{ EHOSTUNREACH,			"EHOSTUNREACH" }, \
		{ EHOSTDOWN,			"EHOSTDOWN" }, \
		{ EPIPE,			"EPIPE" }, \
		{ EPFNOSUPPORT,			"EPFNOSUPPORT" }, \
		{ EPROTONOSUPPORT,		"EPROTONOSUPPORT" }, \
		{ NFS4ERR_ACCESS,		"ACCESS" }, \
		{ NFS4ERR_ATTRNOTSUPP,		"ATTRNOTSUPP" }, \
		{ NFS4ERR_ADMIN_REVOKED,	"ADMIN_REVOKED" }, \
		{ NFS4ERR_BACK_CHAN_BUSY,	"BACK_CHAN_BUSY" }, \
		{ NFS4ERR_BADCHAR,		"BADCHAR" }, \
		{ NFS4ERR_BADHANDLE,		"BADHANDLE" }, \
		{ NFS4ERR_BADIOMODE,		"BADIOMODE" }, \
		{ NFS4ERR_BADLAYOUT,		"BADLAYOUT" }, \
		{ NFS4ERR_BADLABEL,		"BADLABEL" }, \
		{ NFS4ERR_BADNAME,		"BADNAME" }, \
		{ NFS4ERR_BADOWNER,		"BADOWNER" }, \
		{ NFS4ERR_BADSESSION,		"BADSESSION" }, \
		{ NFS4ERR_BADSLOT,		"BADSLOT" }, \
		{ NFS4ERR_BADTYPE,		"BADTYPE" }, \
		{ NFS4ERR_BADXDR,		"BADXDR" }, \
		{ NFS4ERR_BAD_COOKIE,		"BAD_COOKIE" }, \
		{ NFS4ERR_BAD_HIGH_SLOT,	"BAD_HIGH_SLOT" }, \
		{ NFS4ERR_BAD_RANGE,		"BAD_RANGE" }, \
		{ NFS4ERR_BAD_SEQID,		"BAD_SEQID" }, \
		{ NFS4ERR_BAD_SESSION_DIGEST,	"BAD_SESSION_DIGEST" }, \
		{ NFS4ERR_BAD_STATEID,		"BAD_STATEID" }, \
		{ NFS4ERR_CB_PATH_DOWN,		"CB_PATH_DOWN" }, \
		{ NFS4ERR_CLID_INUSE,		"CLID_INUSE" }, \
		{ NFS4ERR_CLIENTID_BUSY,	"CLIENTID_BUSY" }, \
		{ NFS4ERR_COMPLETE_ALREADY,	"COMPLETE_ALREADY" }, \
		{ NFS4ERR_CONN_NOT_BOUND_TO_SESSION, "CONN_NOT_BOUND_TO_SESSION" }, \
		{ NFS4ERR_DEADLOCK,		"DEADLOCK" }, \
		{ NFS4ERR_DEADSESSION,		"DEAD_SESSION" }, \
		{ NFS4ERR_DELAY,		"DELAY" }, \
		{ NFS4ERR_DELEG_ALREADY_WANTED,	"DELEG_ALREADY_WANTED" }, \
		{ NFS4ERR_DELEG_REVOKED,	"DELEG_REVOKED" }, \
		{ NFS4ERR_DENIED,		"DENIED" }, \
		{ NFS4ERR_DIRDELEG_UNAVAIL,	"DIRDELEG_UNAVAIL" }, \
		{ NFS4ERR_DQUOT,		"DQUOT" }, \
		{ NFS4ERR_ENCR_ALG_UNSUPP,	"ENCR_ALG_UNSUPP" }, \
		{ NFS4ERR_EXIST,		"EXIST" }, \
		{ NFS4ERR_EXPIRED,		"EXPIRED" }, \
		{ NFS4ERR_FBIG,			"FBIG" }, \
		{ NFS4ERR_FHEXPIRED,		"FHEXPIRED" }, \
		{ NFS4ERR_FILE_OPEN,		"FILE_OPEN" }, \
		{ NFS4ERR_GRACE,		"GRACE" }, \
		{ NFS4ERR_HASH_ALG_UNSUPP,	"HASH_ALG_UNSUPP" }, \
		{ NFS4ERR_INVAL,		"INVAL" }, \
		{ NFS4ERR_IO,			"IO" }, \
		{ NFS4ERR_ISDIR,		"ISDIR" }, \
		{ NFS4ERR_LAYOUTTRYLATER,	"LAYOUTTRYLATER" }, \
		{ NFS4ERR_LAYOUTUNAVAILABLE,	"LAYOUTUNAVAILABLE" }, \
		{ NFS4ERR_LEASE_MOVED,		"LEASE_MOVED" }, \
		{ NFS4ERR_LOCKED,		"LOCKED" }, \
		{ NFS4ERR_LOCKS_HELD,		"LOCKS_HELD" }, \
		{ NFS4ERR_LOCK_RANGE,		"LOCK_RANGE" }, \
		{ NFS4ERR_MINOR_VERS_MISMATCH,	"MINOR_VERS_MISMATCH" }, \
		{ NFS4ERR_MLINK,		"MLINK" }, \
		{ NFS4ERR_MOVED,		"MOVED" }, \
		{ NFS4ERR_NAMETOOLONG,		"NAMETOOLONG" }, \
		{ NFS4ERR_NOENT,		"NOENT" }, \
		{ NFS4ERR_NOFILEHANDLE,		"NOFILEHANDLE" }, \
		{ NFS4ERR_NOMATCHING_LAYOUT,	"NOMATCHING_LAYOUT" }, \
		{ NFS4ERR_NOSPC,		"NOSPC" }, \
		{ NFS4ERR_NOTDIR,		"NOTDIR" }, \
		{ NFS4ERR_NOTEMPTY,		"NOTEMPTY" }, \
		{ NFS4ERR_NOTSUPP,		"NOTSUPP" }, \
		{ NFS4ERR_NOT_ONLY_OP,		"NOT_ONLY_OP" }, \
		{ NFS4ERR_NOT_SAME,		"NOT_SAME" }, \
		{ NFS4ERR_NO_GRACE,		"NO_GRACE" }, \
		{ NFS4ERR_NXIO,			"NXIO" }, \
		{ NFS4ERR_OLD_STATEID,		"OLD_STATEID" }, \
		{ NFS4ERR_OPENMODE,		"OPENMODE" }, \
		{ NFS4ERR_OP_ILLEGAL,		"OP_ILLEGAL" }, \
		{ NFS4ERR_OP_NOT_IN_SESSION,	"OP_NOT_IN_SESSION" }, \
		{ NFS4ERR_PERM,			"PERM" }, \
		{ NFS4ERR_PNFS_IO_HOLE,		"PNFS_IO_HOLE" }, \
		{ NFS4ERR_PNFS_NO_LAYOUT,	"PNFS_NO_LAYOUT" }, \
		{ NFS4ERR_RECALLCONFLICT,	"RECALLCONFLICT" }, \
		{ NFS4ERR_RECLAIM_BAD,		"RECLAIM_BAD" }, \
		{ NFS4ERR_RECLAIM_CONFLICT,	"RECLAIM_CONFLICT" }, \
		{ NFS4ERR_REJECT_DELEG,		"REJECT_DELEG" }, \
		{ NFS4ERR_REP_TOO_BIG,		"REP_TOO_BIG" }, \
		{ NFS4ERR_REP_TOO_BIG_TO_CACHE,	"REP_TOO_BIG_TO_CACHE" }, \
		{ NFS4ERR_REQ_TOO_BIG,		"REQ_TOO_BIG" }, \
		{ NFS4ERR_RESOURCE,		"RESOURCE" }, \
		{ NFS4ERR_RESTOREFH,		"RESTOREFH" }, \
		{ NFS4ERR_RETRY_UNCACHED_REP,	"RETRY_UNCACHED_REP" }, \
		{ NFS4ERR_RETURNCONFLICT,	"RETURNCONFLICT" }, \
		{ NFS4ERR_ROFS,			"ROFS" }, \
		{ NFS4ERR_SAME,			"SAME" }, \
		{ NFS4ERR_SHARE_DENIED,		"SHARE_DENIED" }, \
		{ NFS4ERR_SEQUENCE_POS,		"SEQUENCE_POS" }, \
		{ NFS4ERR_SEQ_FALSE_RETRY,	"SEQ_FALSE_RETRY" }, \
		{ NFS4ERR_SEQ_MISORDERED,	"SEQ_MISORDERED" }, \
		{ NFS4ERR_SERVERFAULT,		"SERVERFAULT" }, \
		{ NFS4ERR_STALE,		"STALE" }, \
		{ NFS4ERR_STALE_CLIENTID,	"STALE_CLIENTID" }, \
		{ NFS4ERR_STALE_STATEID,	"STALE_STATEID" }, \
		{ NFS4ERR_SYMLINK,		"SYMLINK" }, \
		{ NFS4ERR_TOOSMALL,		"TOOSMALL" }, \
		{ NFS4ERR_TOO_MANY_OPS,		"TOO_MANY_OPS" }, \
		{ NFS4ERR_UNKNOWN_LAYOUTTYPE,	"UNKNOWN_LAYOUTTYPE" }, \
		{ NFS4ERR_UNSAFE_COMPOUND,	"UNSAFE_COMPOUND" }, \
		{ NFS4ERR_WRONGSEC,		"WRONGSEC" }, \
		{ NFS4ERR_WRONG_CRED,		"WRONG_CRED" }, \
		{ NFS4ERR_WRONG_TYPE,		"WRONG_TYPE" }, \
		{ NFS4ERR_XDEV,			"XDEV" }, \
		/* ***** Internal to Linux NFS client ***** */ \
		{ NFS4ERR_RESET_TO_MDS,		"RESET_TO_MDS" }, \
		{ NFS4ERR_RESET_TO_PNFS,	"RESET_TO_PNFS" })

#define show_nfs4_verifier(x) \
	__print_hex_str(x, NFS4_VERIFIER_SIZE)

TRACE_DEFINE_ENUM(NF4BAD);
TRACE_DEFINE_ENUM(NF4REG);
TRACE_DEFINE_ENUM(NF4DIR);
TRACE_DEFINE_ENUM(NF4BLK);
TRACE_DEFINE_ENUM(NF4CHR);
TRACE_DEFINE_ENUM(NF4LNK);
TRACE_DEFINE_ENUM(NF4SOCK);
TRACE_DEFINE_ENUM(NF4FIFO);
TRACE_DEFINE_ENUM(NF4ATTRDIR);
TRACE_DEFINE_ENUM(NF4NAMEDATTR);

#define show_nfs4_file_type(x) \
	__print_symbolic(x, \
		{ NF4BAD,				"BAD" }, \
		{ NF4REG,				"REG" }, \
		{ NF4DIR,				"DIR" }, \
		{ NF4BLK,				"BLK" }, \
		{ NF4CHR,				"CHR" }, \
		{ NF4LNK,				"LNK" }, \
		{ NF4SOCK,				"SOCK" }, \
		{ NF4FIFO,				"FIFO" }, \
		{ NF4ATTRDIR,				"ATTRDIR" }, \
		{ NF4NAMEDATTR,				"NAMEDATTR" })

#define show_nfs4_channel_dir_from_client(x) \
	__print_symbolic(x, \
		{ NFS4_CDFC4_FORE,			"FORE" }, \
		{ NFS4_CDFC4_BACK,			"BACK" }, \
		{ NFS4_CDFC4_FORE_OR_BOTH,		"FORE_OR_BOTH" }, \
		{ NFS4_CDFC4_BACK_OR_BOTH,		"BACK_OR_BOTH" })

#define show_nfs4_channel_dir_from_server(x) \
	__print_symbolic(x, \
		{ NFS4_CDFS4_FORE,			"FORE" }, \
		{ NFS4_CDFS4_BACK,			"BACK" }, \
		{ NFS4_CDFS4_BOTH,			"BOTH" })

#define show_nfs4_sessionid(x) \
	__print_hex_str(__entry->sessionid, NFS4_MAX_SESSIONID_LEN)

#define show_nfs4_exchgid4_flags(x) \
	__print_flags(x, "|", \
		{ EXCHGID4_FLAG_SUPP_MOVED_REFER,	"SUPP_MOVED_REFER" }, \
		{ EXCHGID4_FLAG_SUPP_MOVED_MIGR,	"SUPP_MOVED_MIGR" }, \
		{ EXCHGID4_FLAG_BIND_PRINC_STATEID,	"BIND_PRINC_STATEID" }, \
		{ EXCHGID4_FLAG_USE_NON_PNFS,		"USE_NON_PNFS" }, \
		{ EXCHGID4_FLAG_USE_PNFS_MDS,		"USE_PNFS_MDS" }, \
		{ EXCHGID4_FLAG_USE_PNFS_DS,		"USE_PNFS_DS" }, \
		{ EXCHGID4_FLAG_MASK_PNFS,		"MASK_PNFS" }, \
		{ EXCHGID4_FLAG_UPD_CONFIRMED_REC_A,	"UPD_CONFIRMED_REC_A" }, \
		{ EXCHGID4_FLAG_CONFIRMED_R,		"CONFIRMED_R" })

TRACE_DEFINE_ENUM(SP4_NONE);
TRACE_DEFINE_ENUM(SP4_MACH_CRED);
TRACE_DEFINE_ENUM(SP4_SSV);

#define show_nfs4_exchid4_spa_how(x) \
	__print_symbolic(x, \
		{ SP4_NONE,				"NONE" }, \
		{ SP4_MACH_CRED,			"MACH_CRED" }, \
		{ SP4_SSV,				"SSV" })

#define show_nfs4_csa_flags(x) \
	__print_flags(x, "|", \
		{ SESSION4_PERSIST,			"PERSIST" }, \
		{ SESSION4_BACK_CHAN,			"CONN_BACK_CHAN" }, \
		{ SESSION4_RDMA,			"CONN_RDMA" })

#define show_nfs4_fattr4_bm_word0(x) \
	__print_flags(x, "|", \
		{ FATTR4_WORD0_SUPPORTED_ATTRS,		"SUPPORTED_ATTRS" }, \
		{ FATTR4_WORD0_TYPE,			"TYPE" }, \
		{ FATTR4_WORD0_FH_EXPIRE_TYPE,		"FH_EXPIRE_TYPE" }, \
		{ FATTR4_WORD0_CHANGE,			"CHANGE" }, \
		{ FATTR4_WORD0_SIZE,			"SIZE" }, \
		{ FATTR4_WORD0_LINK_SUPPORT,		"LINK_SUPPORT" }, \
		{ FATTR4_WORD0_SYMLINK_SUPPORT,		"SYMLINK_SUPPORT" }, \
		{ FATTR4_WORD0_NAMED_ATTR,		"NAMED_ATTR" }, \
		{ FATTR4_WORD0_FSID,			"FSID" }, \
		{ FATTR4_WORD0_UNIQUE_HANDLES,		"UNIQUE_HANDLES" }, \
		{ FATTR4_WORD0_LEASE_TIME,		"LEASE_TIME" }, \
		{ FATTR4_WORD0_RDATTR_ERROR,		"RDATTR_ERROR" }, \
		{ FATTR4_WORD0_ACL,			"ACL" }, \
		{ FATTR4_WORD0_ACLSUPPORT,		"ACLSUPPORT" }, \
		{ FATTR4_WORD0_ARCHIVE,			"ARCHIVE" }, \
		{ FATTR4_WORD0_CANSETTIME,		"CANSETTIME" }, \
		{ FATTR4_WORD0_CASE_INSENSITIVE,	"CASE_INSENSITIVE" }, \
		{ FATTR4_WORD0_CASE_PRESERVING,		"CASE_PRESERVING" }, \
		{ FATTR4_WORD0_CHOWN_RESTRICTED,	"CHOWN_RESTRICTED" }, \
		{ FATTR4_WORD0_FILEHANDLE,		"FILEHANDLE" }, \
		{ FATTR4_WORD0_FILEID,			"FILEID" }, \
		{ FATTR4_WORD0_FILES_AVAIL,		"FILES_AVAIL" }, \
		{ FATTR4_WORD0_FILES_FREE,		"FILES_FREE" }, \
		{ FATTR4_WORD0_FILES_TOTAL,		"FILES_TOTAL" }, \
		{ FATTR4_WORD0_FS_LOCATIONS,		"FS_LOCATIONS" }, \
		{ FATTR4_WORD0_HIDDEN,			"HIDDEN" }, \
		{ FATTR4_WORD0_HOMOGENEOUS,		"HOMOGENEOUS" }, \
		{ FATTR4_WORD0_MAXFILESIZE,		"MAXFILESIZE" }, \
		{ FATTR4_WORD0_MAXLINK,			"MAXLINK" }, \
		{ FATTR4_WORD0_MAXNAME,			"MAXNAME" }, \
		{ FATTR4_WORD0_MAXREAD,			"MAXREAD" }, \
		{ FATTR4_WORD0_MAXWRITE,		"MAXWRITE" })

#define show_nfs4_fattr4_bm_word1(x) \
	__print_flags(x, "|", \
		{ FATTR4_WORD1_MIMETYPE,		"MIMETYPE" }, \
		{ FATTR4_WORD1_MODE,			"MODE" }, \
		{ FATTR4_WORD1_NO_TRUNC,		"NO_TRUNC" }, \
		{ FATTR4_WORD1_NUMLINKS,		"NUMLINKS" }, \
		{ FATTR4_WORD1_OWNER,			"OWNER" }, \
		{ FATTR4_WORD1_OWNER_GROUP,		"OWNER_GROUP" }, \
		{ FATTR4_WORD1_QUOTA_HARD,		"QUOTA_HARD" }, \
		{ FATTR4_WORD1_QUOTA_SOFT,		"QUOTA_SOFT" }, \
		{ FATTR4_WORD1_QUOTA_USED,		"QUOTA_USED" }, \
		{ FATTR4_WORD1_RAWDEV,			"RAWDEV" }, \
		{ FATTR4_WORD1_SPACE_AVAIL,		"SPACE_AVAIL" }, \
		{ FATTR4_WORD1_SPACE_FREE,		"SPACE_FREE" }, \
		{ FATTR4_WORD1_SPACE_TOTAL,		"SPACE_TOTAL" }, \
		{ FATTR4_WORD1_SPACE_USED,		"SPACE_USED" }, \
		{ FATTR4_WORD1_SYSTEM,			"SYSTEM" }, \
		{ FATTR4_WORD1_TIME_ACCESS,		"TIME_ACCESS" }, \
		{ FATTR4_WORD1_TIME_ACCESS_SET,		"TIME_ACCESS_SET" }, \
		{ FATTR4_WORD1_TIME_BACKUP,		"TIME_BACKUP" }, \
		{ FATTR4_WORD1_TIME_CREATE,		"TIME_CREATE" }, \
		{ FATTR4_WORD1_TIME_DELTA,		"TIME_DELTA" }, \
		{ FATTR4_WORD1_TIME_METADATA,		"TIME_METADATA" }, \
		{ FATTR4_WORD1_TIME_MODIFY,		"TIME_MODIFY" }, \
		{ FATTR4_WORD1_TIME_MODIFY_SET,		"TIME_MODIFY_SET" }, \
		{ FATTR4_WORD1_MOUNTED_ON_FILEID,	"MOUNTED_ON_FILEID" }, \
		{ FATTR4_WORD1_FS_LAYOUT_TYPES,		"FS_LAYOUT_TYPES" })

#define show_nfs4_fattr4_bm_word2(x) \
	__print_flags(x, "|", \
		{ FATTR4_WORD2_LAYOUT_TYPES,		"LAYOUT_TYPES" }, \
		{ FATTR4_WORD2_LAYOUT_BLKSIZE,		"LAYOUT_BLKSIZE" }, \
		{ FATTR4_WORD2_MDSTHRESHOLD,		"MDSTHRESHOLD" }, \
		{ FATTR4_WORD2_SUPPATTR_EXCLCREAT,	"SUPPATTR_EXCLCREAT" }, \
		{ FATTR4_WORD2_CLONE_BLKSIZE,		"CLONE_BLKSIZE" }, \
		{ FATTR4_WORD2_CHANGE_ATTR_TYPE,	"CHANGE_ATTR_TYPE" }, \
		{ FATTR4_WORD2_SECURITY_LABEL,		"SECURITY_LABEL" }, \
		{ FATTR4_WORD2_MODE_UMASK,		"MODE_UMASK" }, \
		{ FATTR4_WORD2_XATTR_SUPPORT,		"XATTR_SUPPORT" })

#define show_nfs4_fh_expire_type(x) \
	__print_flags(x, "|", \
		{ NFS4_FH_PERSISTENT,			"PERSISTENT" }, \
		{ NFS4_FH_NOEXPIRE_WITH_OPEN,		"NOEXPIRE_WITH_OPEN" }, \
		{ NFS4_FH_VOLATILE_ANY,			"VOLATILE_ANY" }, \
		{ NFS4_FH_VOL_MIGRATION,		"VOL_MIGRATION" }, \
		{ NFS4_FH_VOL_RENAME,			"VOL_RENAME" })

#define show_nfs4_aclsupport(x) \
	__print_flags(x, "|", \
		{ ACL4_SUPPORT_ALLOW_ACL,		"ALLOW_ACL" }, \
		{ ACL4_SUPPORT_DENY_ACL,		"DENY_ACL" }, \
		{ ACL4_SUPPORT_AUDIT_ACL,		"AUDIT_ACL" }, \
		{ ACL4_SUPPORT_ALARM_ACL,		"ALARM_ACL" })

TRACE_DEFINE_ENUM(NFS4_CHANGE_TYPE_IS_MONOTONIC_INCR);
TRACE_DEFINE_ENUM(NFS4_CHANGE_TYPE_IS_VERSION_COUNTER);
TRACE_DEFINE_ENUM(NFS4_CHANGE_TYPE_IS_VERSION_COUNTER_NOPNFS);
TRACE_DEFINE_ENUM(NFS4_CHANGE_TYPE_IS_TIME_METADATA);
TRACE_DEFINE_ENUM(NFS4_CHANGE_TYPE_IS_UNDEFINED);

#define show_nfs4_change_attr_type(x) \
	__print_symbolic(x, \
		{ NFS4_CHANGE_TYPE_IS_MONOTONIC_INCR,		"MONOTONIC_INCR" }, \
		{ NFS4_CHANGE_TYPE_IS_VERSION_COUNTER,		"VERSION_COUNTER" }, \
		{ NFS4_CHANGE_TYPE_IS_VERSION_COUNTER_NOPNFS,	"VERSION_COUNTER_NOPNFS" }, \
		{ NFS4_CHANGE_TYPE_IS_TIME_METADATA,		"TIME_METADATA" }, \
		{ NFS4_CHANGE_TYPE_IS_UNDEFINED,		"UNDEFINED" })

TRACE_DEFINE_ENUM(NFS4_UNLOCK_LT);
TRACE_DEFINE_ENUM(NFS4_READ_LT);
TRACE_DEFINE_ENUM(NFS4_WRITE_LT);
TRACE_DEFINE_ENUM(NFS4_READW_LT);
TRACE_DEFINE_ENUM(NFS4_WRITEW_LT);

#define show_nfs4_lock_type(x) \
	__print_symbolic(x, \
		{ NFS4_UNLOCK_LT,			"UNLOCK" }, \
		{ NFS4_READ_LT,				"READ" }, \
		{ NFS4_WRITE_LT,			"WRITE" }, \
		{ NFS4_READW_LT,			"READW" }, \
		{ NFS4_WRITEW_LT,			"WRITEW" })

TRACE_DEFINE_ENUM(IOMODE_READ);
TRACE_DEFINE_ENUM(IOMODE_RW);
TRACE_DEFINE_ENUM(IOMODE_ANY);

#define show_pnfs_layout_iomode(x) \
	__print_symbolic(x, \
		{ IOMODE_READ,			"READ" }, \
		{ IOMODE_RW,			"RW" }, \
		{ IOMODE_ANY,			"ANY" })

#define show_nfs4_seq4_status(x) \
	__print_flags(x, "|", \
		{ SEQ4_STATUS_CB_PATH_DOWN,		"CB_PATH_DOWN" }, \
		{ SEQ4_STATUS_CB_GSS_CONTEXTS_EXPIRING,	"CB_GSS_CONTEXTS_EXPIRING" }, \
		{ SEQ4_STATUS_CB_GSS_CONTEXTS_EXPIRED,	"CB_GSS_CONTEXTS_EXPIRED" }, \
		{ SEQ4_STATUS_EXPIRED_ALL_STATE_REVOKED, "EXPIRED_ALL_STATE_REVOKED" }, \
		{ SEQ4_STATUS_EXPIRED_SOME_STATE_REVOKED, "EXPIRED_SOME_STATE_REVOKED" }, \
		{ SEQ4_STATUS_ADMIN_STATE_REVOKED,	"ADMIN_STATE_REVOKED" }, \
		{ SEQ4_STATUS_RECALLABLE_STATE_REVOKED,	"RECALLABLE_STATE_REVOKED" }, \
		{ SEQ4_STATUS_LEASE_MOVED,		"LEASE_MOVED" }, \
		{ SEQ4_STATUS_RESTART_RECLAIM_NEEDED,	"RESTART_RECLAIM_NEEDED" }, \
		{ SEQ4_STATUS_CB_PATH_DOWN_SESSION,	"CB_PATH_DOWN_SESSION" }, \
		{ SEQ4_STATUS_BACKCHANNEL_FAULT,	"BACKCHANNEL_FAULT" })
